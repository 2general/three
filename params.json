{"name":"Three","body":"At A Glance\r\n-----------\r\n\r\n`Three` was made to make the differences in Open311 GeoReport server\r\nimplementations completely unknown to the end user. Interacting with\r\nservice requests should be easy.\r\n\r\n```python\r\n>>> import three\r\n\r\n>>> three.cities()\r\n['boston', 'macon', 'new haven', 'sf', ... ]\r\n\r\n# Let's start off with Macon.\r\n>>> three.city('macon')\r\n\r\n>>> three.key('my_macon_api_key')\r\n\r\n>>> three.discovery()\r\n{'service': {'discovery': 'data'}}\r\n\r\n>>> three.services()\r\n{'macon': {'service': 'data'}}\r\n\r\n>>> three.services('033')\r\n{'033': {'service_code': 'info'}}\r\n\r\n>>> three.requests()\r\n{'macon': {'request': 'data'}}\r\n\r\n>>> three.requests('123')\r\n{'123': {'request': 'data'}}\r\n\r\n\r\n# Now, let's switch it up to San Francisco.\r\n>>> three.city('sf')\r\n\r\n>>> three.key('my_sf_api_key')\r\n\r\n>>> three.services()\r\n{'SF': {'service': 'data'}}\r\n\r\n>>> three.requests()\r\n{'SF': {'request': 'data'}}\r\n\r\n\r\n# And, finally Baltimore.\r\n>>> three.city('baltimore')\r\n\r\n>>> three.key('baltimore_api_key')\r\n\r\n>>> three.services()\r\n{'baltimore': {'service': 'data'}}\r\n\r\n>>> three.requests()\r\n{'baltimore': {'request': 'data'}}\r\n```\r\n\r\n### Effortless\r\n\r\nFor casual users, working with the `three` module should feel effortless. Any pain\r\npoints (such as dealing with XML, required parameters, etc.) should be\r\nabstracted away.\r\n\r\n\r\n```python\r\n>>> import three\r\n\r\n>>> three.city('macon')\r\n\r\n# Let's grab requests between certain dates.\r\n>>> three.requests(start='03-10-2012', end='03-17-2012')\r\n\r\n# But, let's use the between parameter.\r\n>>> three.requests(between=['03-10-2012', '03-17-2012'])\r\n\r\n# All the requests! (Currently 83...)\r\n>>> three.requests(between=['03-10-2012', '03-17-2012'], count=100)\r\n```\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nThis is still a work in progress, but you can `git clone` this repo and\r\nrun `python setup.py install` to check out the current progress.\r\n\r\nAlternatively, you can install via `pip`.\r\n\r\n    pip install three","tagline":"An easy-to-use Python wrapper for the Open311 API.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}